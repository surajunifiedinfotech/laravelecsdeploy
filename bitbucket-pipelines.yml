# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: ubuntu:latest

pipelines:
  branches:
    master:
      - step:
          name: Build and test
          image: ubuntu:latest
          script:
            - echo "No test added"
      - step:
          trigger: manual # uncomment to have a manual step
          # set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY as environment variables
          name: Deploy to ECS
          deployment: production # set to test, staging or production

          image: atlassian/pipelines-awscli
          services:
            - docker
          script:
            # ECS variables
            - export ECS_CLUSTER_NAME=$ECS_PREFIX
            - export ECS_SERVICE_NAME=$ECS_PREFIX-service
            - export ECS_TASK_NAME=$ECS_PREFIX-task
            - export LOG_GROUP=$ECS_PREFIX

            # aws login
            - eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)

            # get the .env for environment variables
            #- aws s3 cp s3://s3bucket/ ./ --include "*" --recursive
            #- eval $(aws logs create-log-group --log-group-name $ECS_CLUSTER_NAME)

            # docker
            - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
            - export IMAGE_NAME="${AWS_REGISTRY_URL}:${BUILD_ID}"
            - docker build -t "$IMAGE_NAME" .
            - docker push $IMAGE_NAME
            - docker tag $IMAGE_NAME $AWS_REGISTRY_URL:${BUILD_ID}
            - docker push $AWS_REGISTRY_URL:${BUILD_ID}
definitions:
  services:
    docker:
      memory: 2048 # reduce memory for docker-in-docker from 1GB to 512MB
